services:
  nginx-proxy:
    build:
      context: .
      dockerfile: docker/proxy/proxy.Dockerfile
    image: otus-php-hw04/nginx-proxy:latest
    ports:
      - "80:80"

  nginx-backend1:
    # Строим образ и монтируем тома ТОЛЬКО в первом backend-сервисе
    # Этот образ будет использоваться всеми backend-репликами
    build:
      context: .
      dockerfile: docker/backend/backend.Dockerfile
    image: otus-php-hw04/nginx-backend:latest
    volumes:
      - ./nginx/backend/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/backend/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./public:/app/public

  nginx-backend2:
    # Используем готовый образ без повторной сборки
    # Без volumes, чтобы не создавать конфликтов в dev-окружении
    image: otus-php-hw04/nginx-backend:latest

  php-fpm1:
    build:
      context: .
      dockerfile: docker/php/php.Dockerfile
    image: otus-php-hw04/php-fpm:latest
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - ./phpunit.xml:/app/phpunit.xml
      - ./coverage:/app/coverage
      - ./php/php.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - COMPOSER_HOME=/var/www/.composer

  php-fpm2:
    image: otus-php-hw04/php-fpm:latest

  frontend:
    build:
      context: .
      dockerfile: docker/frontend/vue.dev.Dockerfile
    image: otus-php-hw04/vue:latest
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
